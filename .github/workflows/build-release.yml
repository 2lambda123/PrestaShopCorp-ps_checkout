name: Build & Release draft

on:
  push:
    branches:
      - 'prestashop/1.6.1.x'
  pull_request:
    types: [ opened, reopened, synchronize, edited ]

jobs:
  deploy:
    name: build dependencies & create artifact
    if: "!(contains(github.event.pull_request.labels.*.name, 'prestabulle1') ||
      contains(github.event.pull_request.labels.*.name, 'prestabulle2') ||
      contains(github.event.pull_request.labels.*.name, 'prestabulle3') ||
      contains(github.event.pull_request.labels.*.name, 'prestabulle4') ||
      contains(github.event.pull_request.labels.*.name, 'prestabulle5') ||
      contains(github.event.pull_request.labels.*.name, 'prestabulle6'))"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Build JS dependencies
        uses: PrestaShopCorp/github-action-build-js/12@v1.0
        with:
          cmd: npm
          path: ./

      - name: Install composer dependencies
        run: composer install --no-dev -o

      - name: Clean-up project
        uses: PrestaShopCorp/github-action-clean-before-deploy@v1.0

      - name: Clean-up node_modules directory
        run: sudo rm -rf node_modules

      - name: Create & upload artifact
        uses: actions/upload-artifact@v1

        with:
          name: ${{ github.event.repository.name }}
          path: ../
  update_release_draft:
    runs-on: ubuntu-latest
    needs: [deploy]
    if: github.event_name == 'push'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: ${{ github.event.repository.name }}
      - id: release_info
        uses: toolmantim/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get module version
        id: get_version
        run: |
          echo ::set-output name=VERSION::$(grep "const VERSION = " ./ps_checkout.php | sed "s/.*'\(.*\)'.*/\1/")
      - name: Prepare for Release
        run: |
          cd ${{ github.event.repository.name }}
          zip -r ${{ github.event.repository.name }}-${{ steps.get_version.outputs.VERSION }}.zip ${{ github.event.repository.name }} -x '*.git*'
      - name: Clean existing assets
        shell: bash
        run: |
          curl -fsSL https://github.com/github/hub/raw/master/script/get | bash -s 2.14.1
          assets=`bin/hub api -t repos/${{ github.repository }}/releases/${{ steps.release_info.outputs.id }}/assets | awk '/\].url/ { print $2 }'`
          for asset in $assets
          do
            bin/hub api -X DELETE $asset
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to GitHub Release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_info.outputs.upload_url }}
          asset_path: ./${{ github.event.repository.name }}/${{ github.event.repository.name }}-${{ steps.get_version.outputs.VERSION }}.zip
          asset_name: ${{ github.event.repository.name }}-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip

  build_for_prestabulle:
    name: build dependencies & create artifact for prestabulle
    if:  github.event_name == 'pull_request' && (contains(github.event.pull_request.labels.*.name, 'prestabulle1') ||
      contains(github.event.pull_request.labels.*.name, 'prestabulle2') ||
      contains(github.event.pull_request.labels.*.name, 'prestabulle3') ||
      contains(github.event.pull_request.labels.*.name, 'prestabulle4') ||
      contains(github.event.pull_request.labels.*.name, 'prestabulle5') ||
      contains(github.event.pull_request.labels.*.name, 'prestabulle6'))
    runs-on: ubuntu-latest
    concurrency: build_for_prestabulle
    env:
      LABELS: ${{toJSON(github.event.pull_request.labels)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Setting up Bubble variable
        run: echo "BULLE=$BULLE$(echo $LABELS > labels.json && cat labels.json | jq -r '.[]|.name'|grep prestabulle)" >> $GITHUB_OUTPUT
        id: get_bulle

      - name: Setting up Cloud SDK ⚙️
        uses: google-github-actions/setup-gcloud@v1

      - name: Authenticating to GCP ⚙️
        uses: google-github-actions/auth@v1
        with:
          project_id: ${{ secrets.GCLOUD_NAMESPACE_INTEGRATION }}
          credentials_json: ${{ secrets.GCLOUD_CREDENTIAL_INTEGRATION }}

      - name: Copy env files
        run: |
          gcloud components install beta
          gcloud beta secrets versions access latest --secret="checkout-module-${{ steps.get_bulle.outputs.BULLE }}" > .env
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCLOUD_CREDENTIAL_INTEGRATION }}

      - name: Build JS dependencies
        uses: PrestaShopCorp/github-action-build-js/12@v1.0
        with:
          cmd: npm
          path: ./

      - name: Install composer dependencies
        run: composer install --no-dev -o

      - name: Clean-up project
        uses: PrestaShopCorp/github-action-clean-before-deploy@v1.0

      - name: Clean-up node_modules directory
        run: sudo rm -rf node_modules

      - name: Create & upload artifact
        uses: actions/upload-artifact@v1

        with:
          name: "${{ github.event.repository.name }}-${{ steps.get_bulle.outputs.BULLE }}"
          path: ../

  prestabulle:
    runs-on: ubuntu-latest
    needs: [build_for_prestabulle]
    if:  github.event_name == 'pull_request' && (contains(github.event.pull_request.labels.*.name, 'prestabulle1') ||
      contains(github.event.pull_request.labels.*.name, 'prestabulle2') ||
      contains(github.event.pull_request.labels.*.name, 'prestabulle3') ||
      contains(github.event.pull_request.labels.*.name, 'prestabulle4') ||
      contains(github.event.pull_request.labels.*.name, 'prestabulle5') ||
      contains(github.event.pull_request.labels.*.name, 'prestabulle6'))
    env:
      LABELS: ${{toJSON(github.event.pull_request.labels)}}
    concurrency: prestabulle
    steps:

      - name: Setting up Bubble variable
        run: echo "BULLE=$BULLE$(echo $LABELS > labels.json && cat labels.json | jq -r '.[]|.name'|grep prestabulle)" >> $GITHUB_OUTPUT
        id: get_bulle

      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: "${{ github.event.repository.name }}-${{ steps.get_bulle.outputs.BULLE }}"

      - name: check cat
        run: cat "${{ github.event.repository.name }}-${{ steps.get_bulle.outputs.BULLE }}/ps_checkout/.env"

      - name: Prepare for Release
        run: |
          cd "${{ github.event.repository.name }}-${{ steps.get_bulle.outputs.BULLE }}"
          zip -r ${{ github.event.repository.name }}-${{ steps.get_bulle.outputs.BULLE }}.zip ${{ github.event.repository.name }} -x '*.git*'

      - name: Authenticating to GCP ⚙️
        uses: google-github-actions/auth@v1
        with:
          project_id: ${{ secrets.GCLOUD_NAMESPACE_INTEGRATION }}
          credentials_json: ${{ secrets.GCLOUD_CREDENTIAL_INTEGRATION }}

      - name: Push Zip in bucket
        run: |
          gsutil cp -r ${{ github.event.repository.name }}-${{ steps.get_bulle.outputs.BULLE }}.zip gs://$GCP_BUCKET/$BUCKET_SUBFOLDER
        env:
          GCP_BUCKET: ${{ secrets.GCP_BUCKET }}
          BUCKET_SUBFOLDER: ${{ steps.get_bulle.outputs.BULLE }}
